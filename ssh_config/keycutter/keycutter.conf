# Keycutter SSH Config - https://github.com/bash-my-aws/keycutter/config

# SSH Config for improved SSH Key security supporting:
#
# - SSH Keytags naming convention: e.g. github.com_mbailey@work
# - SSH Key Privacy: Define which keys to offer to remote hosts.
# - SSH Agent Profiles: Define which keys to forward to different remote hosts.
# - SSH over SSM: Automatically copy public SSH key to AWS EC2 remote hosts.
# - Support for multiple service accounts (e.g. GitHub.com)

# Load custom rules for hosts (that override or append to directives below).
Include keycutter/hosts/*

Host *github.com*
  User git
  ForwardAgent no    # GitHub doesn't need access to your ssh-agent.
  IdentitiesOnly yes # Don't expose random public keys to GitHub.com.
  RequestTTY no      # GitHub does not (intentionally) provide shell access.
  # GitHub's solution to firewalls blocking SSH port 22
  # HostName ssh.github.com 
  # Port 443

# SSH over SSM (AWS Systems Manager)
Match Host i-*,m-*
  ProxyCommand ~/.ssh/keycutter/scripts/ssh-ssm %h %r
  User ec2-user
  ForwardAgent no
  IdentitiesOnly yes
  IdentityFile ~/.ssh/keycutter/keys/ssm-ssh-tmp-key
  StrictHostKeyChecking no
  BatchMode yes
  TCPKeepAlive yes
  ServerAliveInterval 30
  ConnectTimeout 10

# NON-ORIGIN: Add public key <remote host>@$KEYCUTTER_ORIGIN (if it exists).
Match final exec "bash -c '[[ -n $SSH_CONNECTION && -f ~/.ssh/keycutter/keys/%n@${KEYCUTTER_ORIGIN}.pub ]]'"
  IdentityFile ~/.ssh/keycutter/keys/%n@${KEYCUTTER_ORIGIN}.pub

# ORIGIN: Add private key <remote host>@$KEYCUTTER_ORIGIN (if it exists).
Match final exec "bash -c '[[ -z $SSH_CONNECTION && -f ~/.ssh/keycutter/keys/%n@${KEYCUTTER_ORIGIN} ]]'"
  IdentityFile ~/.ssh/keycutter/keys/%n@${KEYCUTTER_ORIGIN}

# ORIGIN: Add private key <remote host>@<local host> (if it exists).
Match final exec "bash -c '[[ -z $SSH_CONNECTION && -f ~/.ssh/keycutter/keys/%n@%L ]]'"
  IdentityFile ~/.ssh/keycutter/keys/%n@%L

# Set some defaults for all connections
Host *
  IdentitiesOnly yes # Don't offer all public keys to remote hosts.
  ForwardAgent no    # Don't offer SSH agent forwarding to all remote hosts.
  RequestTTY yes
  SendEnv KEYCUTTER_ORIGIN

  # ssh-vanilla script:
  # - Ensures ssh-agent is running with required keys if IdentityAgent is set.
  # - Strips user part from SSH Keytag (e.g. github.com[_mbailey@home]).
  # - Makes a TCP connection to remote host using netcat
  ProxyCommand bash -c '[[ -n $SSH_CONNECTION ]] || ~/.ssh/keycutter/scripts/ssh-agent-ensure %n; ~/.ssh/keycutter/scripts/ssh-vanilla %h %p'

Match final exec "bash -c '[[ $(ps -o args= -p $PPID) =~ ^ssh[[:space:]]+((-[^T ]+[[:space:]]+)*[^-][^ ]*)?$ ]]'"

  # Fallback for when sshd on remote host doesn't AcceptEnv KEYCUTTER_ORIGIN
  # Sets $KEYCUTTER_ORIGIN on remote to origin hostname (%L) if not defined.
  # RemoteCommand does not interpret environment variables.
  RemoteCommand bash -c 'export KEYCUTTER_ORIGIN=${KEYCUTTER_ORIGIN:-"%L"}; (keydir="${HOME}/.ssh/keycutter/keys"; mkdir -p "$keydir" && ssh-add -L | while read -r type key comment; do echo "$type $key $comment" > "${keydir}/${comment##*/}.pub" && chmod 0600 "${keydir}/${comment##*/}.pub"; done) && exec "$SHELL" -l'

# vim:ft=sshconfig
